#!/usr/bin/env bash

# Activate python env
source "bin/activate-env" >/dev/null 2>&1

# Run server commands
if [[ "$*" == *gen:ee* ]]; then
    cd "${ROOT:?}"
    npx apollo service:download --endpoint=http://0.0.0.0:5002/graphql/ "${ROOT:?}/schemas/graphql-ee.json"
    cd -
elif [[ "$*" == *gen:graph* ]]; then
    cd "${ROOT:?}"
    npx apollo service:download --endpoint=http://0.0.0.0:5002/graphql/ "${ROOT:?}/schemas/graphql.json"
    cd -
elif [[ "$*" == *gen:admin* ]]; then
    cd "${ROOT:?}"
    npx apollo service:download --endpoint=http://0.0.0.0:5002/admin/graphql/ "${ROOT:?}/schemas/graphql-admin.json"
    cd -
elif [[ "$*" == *gen:openapi* ]]; then
    cd "${ROOT:?}"
    curl http://localhost:5002/shipping-openapi -o "${ROOT:?}/schemas/openapi.yml"
    cd -
elif [[ "$*" == *gen:ts:cli* ]]; then
    cd "${ROOT:?}"
    docker run --rm -v ${PWD}:/local openapitools/openapi-generator-cli generate \
        -i /local/schemas/openapi.yml \
        -g typescript-fetch \
        -o /local/packages/karriojs/api/generated \
        --additional-properties=typescriptThreePlus=true \
        --additional-properties=modelPropertyNaming=snake_case \
        --additional-properties=useSingleRequestParameter=true
    cd -
elif [[ "$*" == *build:js* ]]; then
    cd "${ROOT:?}/packages/karriojs"

    # Generate ts client
    . ${ROOT}/bin/server gen:ts:cli || exit 1

    # Build js client
    rm -rf node_modules
    npm install
    npx gulp build --output "${ROOT:?}/apps/api/karrio/server/static/karrio/js/karrio.js" || exit 1
    cd -
    karrio collectstatic --noinput >/dev/null 2>&1
else
    echo "Help: You can pass any the following commands to the server"
    echo "-----"
    echo "gen:ee - Generate GraphQL ee schema"
    echo "gen:graph - Generate GraphQL schema"
    echo "gen:admin - Generate Admin GraphQL schema"
    echo "gen:openapi - Generate OpenAPI schema"
    echo "gen:ts:cli - Generate Typescript fetch client"
    echo "build:js - Build Browser Javascript client"
fi
